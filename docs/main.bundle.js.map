{"version":3,"sources":["webpack:///./dist/index.js","webpack:///./dist/snotify/enum/SnotifyAction.enum.js","webpack:///./dist/snotify/enum/SnotifyPosition.enum.js","webpack:///./dist/snotify/enum/SnotifyType.enum.js","webpack:///./dist/snotify/pipes/truncate.pipe.js","webpack:///./dist/snotify/snotify.component.js","webpack:///./dist/snotify/snotify.service.js","webpack:///./dist/snotify/toast/icon/icon.component.js","webpack:///./dist/snotify/toast/snotify-toast.model.js","webpack:///./dist/snotify/toast/toast.component.js","webpack:///./example async","webpack:///./example/app/app.component.html","webpack:///./example/app/app.component.scss","webpack:///./example/app/app.component.ts","webpack:///./example/app/app.module.ts","webpack:///./example/environments/environment.ts","webpack:///./example/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAmB;AACI;AACI;AACF;AACD;AACC;AACF;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,4CAA4C,WAAW;;;;;;;;;;ACxCvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;;;;;;;;;;ACRvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;ACX3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;;;;;;;;;;;ACVpB;AACf;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,2CAA2C,WAAW;;;;;;;;;;;;;;AC1BX;AAClB;AACD;AACE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oEAAoE,mCAAmC,EAAE;AACzG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA;AACA,iCAAiC,gBAAgB,iBAAiB,cAAc,eAAe,wBAAwB,EAAE,UAAU,wBAAwB,EAAE,kFAAkF,YAAY,EAAE,qFAAqF,aAAa,EAAE,wFAAwF,2BAA2B,EAAE,8EAA8E,WAAW,EAAE,wFAAwF,UAAU,6BAA6B,EAAE,wFAAwF,cAAc,EAAE,oBAAoB,iBAAiB,QAAQ,UAAU,WAAW,SAAS,2BAA2B,YAAY,aAAa,yBAAyB,EAAE;AACp7B,aAAa,IAAI;AACjB;AACA;AACA,+CAA+C;AAC/C,KAAK,kFAAwB;AAC7B,KAAK,0EAAmB;AACxB,KAAK,2EAAoB;AACzB,EAAE;;;;;;;;;;;;;;;;;;;ACjJmB;AACE;AACL;AACU;AACN;AACI;AACF;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA,yDAAyD,wBAAwB,EAAE;AACnF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,wBAAwB,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB,4FAA4B;AACxF,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB,0FAA0B;AACtF,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB,yFAAyB;AACrF,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB,4FAA4B;AACxF,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,SAAS;AACT;AACA;AACA,wCAAwC,iBAAiB;AACzD,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mEAAmE,4FAA4B,GAAG,sBAAsB;AACxH,SAAS;AACT;AACA;AACA,uCAAuC,iBAAiB;AACxD,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mEAAmE,2FAA2B,GAAG,kCAAkC;AACnI,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C;AAC1C;AACA;AACA,4EAA4E,UAAU,aAAa,EAAE;AACrG;AACA;AACA,qEAAqE,UAAU,aAAa,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,6CAA6C,WAAW;;;;;;;;;;;AC1V7B;AAC3B;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,yKAAyK;AACzK,gDAAgD,eAAe,EAAE,yBAAyB,eAAe,EAAE,sBAAsB,eAAe,EAAE,yBAAyB,eAAe,EAAE,uBAAuB,eAAe,qCAAqC,2BAA2B,EAAE,mBAAmB,KAAK,iCAAiC,yBAAyB,EAAE,OAAO,mCAAmC,2BAA2B,EAAE,EAAE;AACjc,aAAa,IAAI;AACjB;AACA;AACA,4CAA4C,WAAW;AACvD;AACA,eAAe,qEAAc;AAC7B;;;;;;;;;AClBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;ACZmB;AACF;AACD;AACF;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8DAA8D,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AA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","file":"main.bundle.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SnotifyComponent } from './snotify/snotify.component';\r\nimport { ToastComponent } from './snotify/toast/toast.component';\r\nimport { IconComponent } from './snotify/toast/icon/icon.component';\r\nimport { SnotifyService } from './snotify/snotify.service';\r\nimport { TruncatePipe } from './snotify/pipes/truncate.pipe';\r\nexport * from './snotify/snotify.component';\r\nexport * from './snotify/snotify.service';\r\nexport * from './snotify/enum/SnotifyAction.enum';\r\nexport * from './snotify/enum/SnotifyPosition.enum';\r\nexport * from './snotify/enum/SnotifyType.enum';\r\nexport * from './snotify/toast/snotify-toast.model';\r\nexport * from './snotify/pipes/truncate.pipe';\r\nvar SnotifyModule = (function () {\r\n    function SnotifyModule() {\r\n    }\r\n    SnotifyModule.forRoot = function () {\r\n        return {\r\n            ngModule: SnotifyModule,\r\n            providers: [SnotifyService]\r\n        };\r\n    };\r\n    return SnotifyModule;\r\n}());\r\nexport { SnotifyModule };\r\nSnotifyModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                declarations: [\r\n                    SnotifyComponent, ToastComponent, IconComponent, TruncatePipe\r\n                ],\r\n                exports: [\r\n                    SnotifyComponent, TruncatePipe\r\n                ]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nSnotifyModule.ctorParameters = function () { return []; };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/index.js\n// module id = ./dist/index.js\n// module chunks = 1","export var SnotifyAction;\r\n(function (SnotifyAction) {\r\n    SnotifyAction[SnotifyAction[\"onInit\"] = 3] = \"onInit\";\r\n    SnotifyAction[SnotifyAction[\"beforeDestroy\"] = 0] = \"beforeDestroy\";\r\n    SnotifyAction[SnotifyAction[\"afterDestroy\"] = 1] = \"afterDestroy\";\r\n    SnotifyAction[SnotifyAction[\"onClick\"] = 10] = \"onClick\";\r\n    SnotifyAction[SnotifyAction[\"onHoverEnter\"] = 11] = \"onHoverEnter\";\r\n    SnotifyAction[SnotifyAction[\"onHoverLeave\"] = 12] = \"onHoverLeave\";\r\n})(SnotifyAction || (SnotifyAction = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/enum/SnotifyAction.enum.js\n// module id = ./dist/snotify/enum/SnotifyAction.enum.js\n// module chunks = 1","export var SnotifyPosition;\r\n(function (SnotifyPosition) {\r\n    SnotifyPosition[SnotifyPosition[\"left_top\"] = 0] = \"left_top\";\r\n    SnotifyPosition[SnotifyPosition[\"left_center\"] = 1] = \"left_center\";\r\n    SnotifyPosition[SnotifyPosition[\"left_bottom\"] = 2] = \"left_bottom\";\r\n    SnotifyPosition[SnotifyPosition[\"right_top\"] = 3] = \"right_top\";\r\n    SnotifyPosition[SnotifyPosition[\"right_center\"] = 4] = \"right_center\";\r\n    SnotifyPosition[SnotifyPosition[\"right_bottom\"] = 5] = \"right_bottom\";\r\n    SnotifyPosition[SnotifyPosition[\"center_top\"] = 6] = \"center_top\";\r\n    SnotifyPosition[SnotifyPosition[\"center_center\"] = 7] = \"center_center\";\r\n    SnotifyPosition[SnotifyPosition[\"center_bottom\"] = 8] = \"center_bottom\";\r\n})(SnotifyPosition || (SnotifyPosition = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/enum/SnotifyPosition.enum.js\n// module id = ./dist/snotify/enum/SnotifyPosition.enum.js\n// module chunks = 1","export var SnotifyType;\r\n(function (SnotifyType) {\r\n    SnotifyType[SnotifyType[\"SIMPLE\"] = 0] = \"SIMPLE\";\r\n    SnotifyType[SnotifyType[\"SUCCESS\"] = 1] = \"SUCCESS\";\r\n    SnotifyType[SnotifyType[\"ERROR\"] = 2] = \"ERROR\";\r\n    SnotifyType[SnotifyType[\"WARNING\"] = 3] = \"WARNING\";\r\n    SnotifyType[SnotifyType[\"INFO\"] = 4] = \"INFO\";\r\n    SnotifyType[SnotifyType[\"ASYNC\"] = 5] = \"ASYNC\";\r\n    SnotifyType[SnotifyType[\"CONFIRM\"] = 6] = \"CONFIRM\";\r\n    SnotifyType[SnotifyType[\"PROMPT\"] = 7] = \"PROMPT\";\r\n})(SnotifyType || (SnotifyType = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/enum/SnotifyType.enum.js\n// module id = ./dist/snotify/enum/SnotifyType.enum.js\n// module chunks = 1","import { Pipe } from '@angular/core';\r\nvar TruncatePipe = (function () {\r\n    function TruncatePipe() {\r\n    }\r\n    TruncatePipe.prototype.transform = function (value) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var limit = 40;\r\n        var trail = '...';\r\n        if (args.length > 0) {\r\n            limit = args.length > 0 ? parseInt(args[0], 10) : limit;\r\n            trail = args.length > 1 ? args[1] : trail;\r\n        }\r\n        return value.length > limit ? value.substring(0, limit) + trail : value;\r\n    };\r\n    return TruncatePipe;\r\n}());\r\nexport { TruncatePipe };\r\nTruncatePipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'truncate'\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nTruncatePipe.ctorParameters = function () { return []; };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/pipes/truncate.pipe.js\n// module id = ./dist/snotify/pipes/truncate.pipe.js\n// module chunks = 1","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\nimport { SnotifyService } from './snotify.service';\r\nimport { SnotifyAction } from './enum/SnotifyAction.enum';\r\nimport { SnotifyPosition } from './enum/SnotifyPosition.enum';\r\nvar SnotifyComponent = (function () {\r\n    function SnotifyComponent(service, render, snotify) {\r\n        this.service = service;\r\n        this.render = render;\r\n        this.snotify = snotify;\r\n    }\r\n    /**\r\n     * Init base options. Subscribe to options, lifecycle change\r\n     */\r\n    SnotifyComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.setOptions(this.service.options);\r\n        this.optionsSubscription = this.service.optionsChanged.subscribe(function (options) {\r\n            _this.setOptions(options);\r\n        });\r\n        this.setPosition(this.service.options.position);\r\n        this.emitter = this.service.emitter.subscribe(function (toasts) {\r\n            _this.notifications = toasts;\r\n            var list = _this.notifications.filter(function (toast) { return toast.config.backdrop >= 0; });\r\n            if (list.length) {\r\n                _this.backdrop = 0;\r\n                setTimeout(function () {\r\n                    _this.backdrop = list[list.length - 1].config.backdrop;\r\n                }, 10);\r\n            }\r\n            else {\r\n                _this.backdrop = 0;\r\n                setTimeout(function () {\r\n                    _this.backdrop = -1;\r\n                }, _this.service.options.transition);\r\n            }\r\n        });\r\n        this.lifecycleSubscription = this.service.lifecycle.subscribe(function (info) {\r\n            switch (info.action) {\r\n                case SnotifyAction.onInit:\r\n                    if (_this.service.onInit) {\r\n                        _this.service.onInit(info.toast);\r\n                    }\r\n                    break;\r\n                case SnotifyAction.onClick:\r\n                    if (_this.service.onClick) {\r\n                        _this.service.onClick(info.toast);\r\n                    }\r\n                    break;\r\n                case SnotifyAction.onHoverEnter:\r\n                    if (_this.service.onHoverEnter) {\r\n                        _this.service.onHoverEnter(info.toast);\r\n                    }\r\n                    break;\r\n                case SnotifyAction.onHoverLeave:\r\n                    if (_this.service.onHoverLeave) {\r\n                        _this.service.onHoverLeave(info.toast);\r\n                    }\r\n                    break;\r\n                case SnotifyAction.beforeDestroy:\r\n                    if (_this.service.beforeDestroy) {\r\n                        _this.service.beforeDestroy(info.toast);\r\n                    }\r\n                    break;\r\n                case SnotifyAction.afterDestroy:\r\n                    if (_this.service.afterDestroy) {\r\n                        _this.service.afterDestroy(info.toast);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Setup global options object\r\n     * @param options {SnotifyOptions}\r\n     */\r\n    SnotifyComponent.prototype.setOptions = function (options) {\r\n        if (this.service.options.newOnTop) {\r\n            this.dockSize_a = -options.maxOnScreen;\r\n            this.dockSize_b = undefined;\r\n        }\r\n        else {\r\n            this.dockSize_a = 0;\r\n            this.dockSize_b = options.maxOnScreen;\r\n        }\r\n        this.setPosition(options.position);\r\n    };\r\n    /**\r\n     * Setup notifications position\r\n     * @param position {SnotifyPosition}\r\n     */\r\n    SnotifyComponent.prototype.setPosition = function (position) {\r\n        this.render.removeAttribute(this.snotify.nativeElement, 'class');\r\n        switch (position) {\r\n            case SnotifyPosition.left_top:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-leftTop');\r\n                break;\r\n            case SnotifyPosition.left_center:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-leftCenter');\r\n                break;\r\n            case SnotifyPosition.left_bottom:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-leftBottom');\r\n                break;\r\n            case SnotifyPosition.right_top:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-rightTop');\r\n                break;\r\n            case SnotifyPosition.right_center:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-rightCenter');\r\n                break;\r\n            case SnotifyPosition.right_bottom:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-rightBottom');\r\n                break;\r\n            case SnotifyPosition.center_top:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-centerTop');\r\n                break;\r\n            case SnotifyPosition.center_center:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-centerCenter');\r\n                break;\r\n            case SnotifyPosition.center_bottom:\r\n                this.render.addClass(this.snotify.nativeElement, 'snotify-centerBottom');\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Unsubscribe subscriptions\r\n     */\r\n    SnotifyComponent.prototype.ngOnDestroy = function () {\r\n        this.emitter.unsubscribe();\r\n        this.optionsSubscription.unsubscribe();\r\n        this.lifecycleSubscription.unsubscribe();\r\n    };\r\n    return SnotifyComponent;\r\n}());\r\nexport { SnotifyComponent };\r\nSnotifyComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'app-snotify',\r\n                template: \"<div class=\\\"snotify-backdrop\\\" *ngIf=\\\"backdrop >= 0\\\" [style.opacity]=\\\"backdrop\\\"></div> <app-snotify-toast *ngFor=\\\"let notification of notifications| slice:dockSize_a:dockSize_b\\\" [toast]=\\\"notification\\\"> </app-snotify-toast> \",\r\n                styles: [\":host { display: block; position: fixed; width: 300px; z-index: 9999; box-sizing: border-box; } :host * { box-sizing: border-box; } :host(.snotify-leftTop), :host(.snotify-leftCenter), :host(.snotify-leftBottom) { left: 10px; } :host(.snotify-rightTop), :host(.snotify-rightCenter), :host(.snotify-rightBottom) { right: 10px; } :host(.snotify-centerTop), :host(.snotify-centerCenter), :host(.snotify-centerBottom) { left: calc(50% - 300px/2); } :host(.snotify-leftTop), :host(.snotify-rightTop), :host(.snotify-rightTop) { top: 10px; } :host(.snotify-leftCenter), :host(.snotify-rightCenter), :host(.snotify-centerCenter) { top: 50%; transform: translateY(-50%); } :host(.snotify-leftBottom), :host(.snotify-rightBottom), :host(.snotify-centerBottom) { bottom: 10px; } .snotify-backdrop { position: fixed; top: 0; right: 0; bottom: 0; left: 0; background-color: #000000; opacity: 0; z-index: -1; transition: opacity .3s; } \"]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nSnotifyComponent.ctorParameters = function () { return [\r\n    { type: SnotifyService, },\r\n    { type: Renderer2, },\r\n    { type: ElementRef, },\r\n]; };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/snotify.component.js\n// module id = ./dist/snotify/snotify.component.js\n// module chunks = 1","import { Injectable } from '@angular/core';\r\nimport { SnotifyToast } from './toast/snotify-toast.model';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { PromiseObservable } from 'rxjs/observable/PromiseObservable';\r\nimport { SnotifyType } from './enum/SnotifyType.enum';\r\nimport { SnotifyPosition } from './enum/SnotifyPosition.enum';\r\nimport { SnotifyAction } from './enum/SnotifyAction.enum';\r\n/**\r\n * SnotifyService - create, remove, config toasts\r\n */\r\nvar SnotifyService = (function () {\r\n    /**\r\n     * Constructor - initialize base configuration objects\r\n     */\r\n    function SnotifyService() {\r\n        this.emitter = new Subject();\r\n        this.lifecycle = new Subject();\r\n        this.optionsChanged = new Subject();\r\n        this.toastChanged = new Subject();\r\n        this.toastDeleted = new Subject();\r\n        this.notifications = [];\r\n        this.config = {\r\n            showProgressBar: true,\r\n            timeout: 2000,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            buttons: [\r\n                { text: 'Ok', action: null, bold: true },\r\n                { text: 'Cancel', action: null, bold: false },\r\n            ],\r\n            placeholder: 'Enter answer here...',\r\n            bodyMaxLength: 150,\r\n            titleMaxLength: 16,\r\n            backdrop: -1\r\n        };\r\n        this._options = {\r\n            newOnTop: true,\r\n            position: SnotifyPosition.right_bottom,\r\n            maxOnScreen: 8,\r\n            transition: 400,\r\n            maxHeight: 300\r\n        };\r\n    }\r\n    /**\r\n     * Generates random id\r\n     * @return {number}\r\n     */\r\n    SnotifyService.generateRandomId = function () {\r\n        return Math.floor(Math.random() * (Date.now() - 1)) + 1;\r\n    };\r\n    /**\r\n     * Simple is object check.\r\n     * @param item {Object<any>}\r\n     * @returns {boolean}\r\n     */\r\n    SnotifyService.isObject = function (item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n    /**\r\n     * Deep merge objects.\r\n     * @param sources {Array<Object>}\r\n     * @returns {Object<any>}\r\n     */\r\n    SnotifyService.mergeDeep = function () {\r\n        var sources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sources[_i] = arguments[_i];\r\n        }\r\n        var target = {};\r\n        if (!sources.length) {\r\n            return target;\r\n        }\r\n        var _loop_1 = function () {\r\n            var source = sources.shift();\r\n            if (SnotifyService.isObject(source)) {\r\n                var _loop_2 = function (key) {\r\n                    if (SnotifyService.isObject(source[key])) {\r\n                        target[key] = SnotifyService.mergeDeep(target[key], source[key]);\r\n                    }\r\n                    else if (Array.isArray(source[key])) {\r\n                        if (!target[key]) {\r\n                            Object.assign(target, (_a = {}, _a[key] = source[key], _a));\r\n                        }\r\n                        else {\r\n                            target[key].forEach(function (value, i) {\r\n                                target[key][i] = SnotifyService.mergeDeep(value, source[key][i]);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        Object.assign(target, (_b = {}, _b[key] = source[key], _b));\r\n                    }\r\n                    var _a, _b;\r\n                };\r\n                for (var key in source) {\r\n                    _loop_2(key);\r\n                }\r\n            }\r\n        };\r\n        while (sources.length > 0) {\r\n            _loop_1();\r\n        }\r\n        return target;\r\n    };\r\n    /**\r\n     * emit changes in notifications array\r\n     */\r\n    SnotifyService.prototype.emit = function () {\r\n        this.emitter.next(this.getAll());\r\n    };\r\n    /**\r\n     * Set global config\r\n     * @param config {SnotifyConfig}\r\n     * @param options {SnotifyOptions}\r\n     */\r\n    SnotifyService.prototype.setConfig = function (config, options) {\r\n        this.config = Object.assign(this.config, config);\r\n        this._options = Object.assign(this._options, options);\r\n        this.optionsChanged.next(this._options);\r\n    };\r\n    Object.defineProperty(SnotifyService.prototype, \"options\", {\r\n        /**\r\n         * get SnotifyOptions\r\n         * @return {SnotifyOptions}\r\n         */\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * returns SnotifyToast object\r\n     * @param id {Number}\r\n     * @return {undefined|SnotifyToast}\r\n     */\r\n    SnotifyService.prototype.get = function (id) {\r\n        return this.notifications.find(function (toast) { return toast.id === id; });\r\n    };\r\n    /**\r\n     * returns copy of notifications array\r\n     * @return {SnotifyToast[]}\r\n     */\r\n    SnotifyService.prototype.getAll = function () {\r\n        return this.notifications.slice();\r\n    };\r\n    /**\r\n     * add SnotifyToast to notifications array\r\n     * @param toast {SnotifyToast}\r\n     */\r\n    SnotifyService.prototype.add = function (toast) {\r\n        if (this._options.newOnTop) {\r\n            this.notifications.unshift(toast);\r\n        }\r\n        else {\r\n            this.notifications.push(toast);\r\n        }\r\n        this.emit();\r\n    };\r\n    /**\r\n     * If ID passed, emits toast animation remove, if ID & REMOVE passed, removes toast from notifications array\r\n     * @param id {Number}\r\n     * @param remove {Boolean}\r\n     */\r\n    SnotifyService.prototype.remove = function (id, remove) {\r\n        if (!id) {\r\n            return this.clear();\r\n        }\r\n        else if (remove) {\r\n            this.notifications = this.notifications.filter(function (toast) { return toast.id !== id; });\r\n            return this.emit();\r\n        }\r\n        this.toastDeleted.next(id);\r\n    };\r\n    /**\r\n     * Clear notifications array\r\n     */\r\n    SnotifyService.prototype.clear = function () {\r\n        this.notifications = [];\r\n        this.emit();\r\n    };\r\n    /**\r\n     * Creates toast and add it to array, returns toast id\r\n     * @param snotify {Snotify}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.create = function (snotify) {\r\n        var id = SnotifyService.generateRandomId();\r\n        this.add(new SnotifyToast(id, snotify.title, snotify.body, snotify.config || null));\r\n        return id;\r\n    };\r\n    /**\r\n     * Create toast with Success style, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.success = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: Object.assign({}, this.config, config, { type: SnotifyType.SUCCESS })\r\n        });\r\n    };\r\n    /**\r\n     * Create toast with Error style, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.error = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: Object.assign({}, this.config, config, { type: SnotifyType.ERROR })\r\n        });\r\n    };\r\n    /**\r\n     * Create toast with Info style, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.info = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: Object.assign({}, this.config, config, { type: SnotifyType.INFO })\r\n        });\r\n    };\r\n    /**\r\n     * Create toast with Warining style, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.warning = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: Object.assign({}, this.config, config, { type: SnotifyType.WARNING })\r\n        });\r\n    };\r\n    /**\r\n     * Create toast without style, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.simple = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: Object.assign({}, this.config, config)\r\n        });\r\n    };\r\n    /**\r\n     * Create toast with Confirm style {with two buttons}, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.confirm = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: SnotifyService.mergeDeep(this.config, config, { type: SnotifyType.CONFIRM }, { closeOnClick: false })\r\n        });\r\n    };\r\n    /**\r\n     * Create toast with Prompt style {with two buttons}, returns toast id;\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param config {SnotifyConfig}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.prompt = function (title, body, config) {\r\n        return this.create({\r\n            title: title,\r\n            body: body,\r\n            config: SnotifyService.mergeDeep(this.config, config, { type: SnotifyType.PROMPT }, { timeout: 0, closeOnClick: false })\r\n        });\r\n    };\r\n    /**\r\n     * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n     * @param title {String}\r\n     * @param body {String}\r\n     * @param action {Promise<SnotifyConfig> | Observable<SnotifyConfig>}\r\n     * @return {number}\r\n     */\r\n    SnotifyService.prototype.async = function (title, body, action) {\r\n        var _this = this;\r\n        var async;\r\n        if (action instanceof Promise) {\r\n            async = PromiseObservable.create(action);\r\n        }\r\n        else {\r\n            async = action;\r\n        }\r\n        var id = this.simple(title, body, {\r\n            pauseOnHover: false,\r\n            closeOnClick: false,\r\n            timeout: 0,\r\n            showProgressBar: false,\r\n            type: SnotifyType.ASYNC\r\n        });\r\n        var toast = this.get(id);\r\n        var latestToast = Object.assign({}, toast);\r\n        var updateToast = function (type, data) {\r\n            if (!data) {\r\n                latestToast = SnotifyService.mergeDeep(toast, latestToast, { config: { type: type } });\r\n            }\r\n            else {\r\n                latestToast = SnotifyService.mergeDeep(toast, data, { config: { type: type } });\r\n            }\r\n            _this.toastChanged.next(latestToast);\r\n        };\r\n        var lifecycleSubscription = this.lifecycle.subscribe(function (info) {\r\n            if (info.action === SnotifyAction.onInit && info.toast.id === id) {\r\n                var subscription_1 = async.subscribe(function (next) {\r\n                    updateToast(SnotifyType.ASYNC, next);\r\n                }, function (error) {\r\n                    updateToast(SnotifyType.ERROR, error);\r\n                    subscription_1.unsubscribe();\r\n                }, function () {\r\n                    updateToast(SnotifyType.SUCCESS);\r\n                    subscription_1.unsubscribe();\r\n                    lifecycleSubscription.unsubscribe();\r\n                });\r\n            }\r\n        });\r\n        return id;\r\n    };\r\n    return SnotifyService;\r\n}());\r\nexport { SnotifyService };\r\nSnotifyService.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nSnotifyService.ctorParameters = function () { return []; };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/snotify.service.js\n// module id = ./dist/snotify/snotify.service.js\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nvar IconComponent = (function () {\r\n    function IconComponent() {\r\n    }\r\n    return IconComponent;\r\n}());\r\nexport { IconComponent };\r\nIconComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'app-icon',\r\n                template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 512 512\\\" style=\\\"enable-background:new 0 0 48 48;\\\" xml:space=\\\"preserve\\\" width=\\\"48px\\\" height=\\\"48px\\\"> <g *ngIf=\\\"types.warning\\\" class=\\\"snotify-icon__warning\\\"> <path d=\\\"M256,512c141.15,0,256-114.84,256-256S397.15,0,256,0,0,114.84,0,256,114.85,512,256,512Zm0-480.49c123.79,0,224.49,100.71,224.49,224.49S379.79,480.49,256,480.49,31.51,379.79,31.51,256,132.21,31.51,256,31.51Z\\\"/><circle cx=\\\"260.08\\\" cy=\\\"343.87\\\" r=\\\"26.35\\\"/><path d=\\\"M254.68,278.39a15.76,15.76,0,0,0,15.75-15.75V128.72a15.75,15.75,0,1,0-31.51,0V262.63A15.76,15.76,0,0,0,254.68,278.39Z\\\"/> </g> <g *ngIf=\\\"types.success\\\" class=\\\"snotify-icon__success\\\"> <path d=\\\"M256,0C114.85,0,0,114.84,0,256S114.85,512,256,512,512,397.16,512,256,397.15,0,256,0Zm0,492.31c-130.29,0-236.31-106-236.31-236.31S125.71,19.69,256,19.69,492.31,125.71,492.31,256,386.29,492.31,256,492.31Z\\\"/><path class=\\\"cls-1\\\" d=\\\"M376.64,151,225.31,321.24l-91.17-72.93a9.85,9.85,0,0,0-12.3,15.38l98.46,78.77a9.86,9.86,0,0,0,13.52-1.15L391.36,164.08A9.85,9.85,0,0,0,376.64,151Z\\\"/> </g> <g *ngIf=\\\"types.info && !types.async\\\" class=\\\"snotify-icon__info\\\"> <path d=\\\"M256,0C114.84,0,0,114.84,0,256S114.84,512,256,512,512,397.16,512,256,397.15,0,256,0Zm0,478.43C133.35,478.43,33.57,378.64,33.57,256S133.35,33.58,256,33.58,478.42,133.36,478.42,256,378.64,478.43,256,478.43Z\\\"/><path d=\\\"M251.26,161.24a22.39,22.39,0,1,0-22.38-22.39A22.39,22.39,0,0,0,251.26,161.24Z\\\"/><path d=\\\"M286.84,357.87h-14v-160A16.79,16.79,0,0,0,256,181.05H225.17a16.79,16.79,0,0,0,0,33.58h14.05V357.87H225.17a16.79,16.79,0,0,0,0,33.57h61.67a16.79,16.79,0,1,0,0-33.57Z\\\"/> </g> <g *ngIf=\\\"types.error\\\" class=\\\"snotify-icon__error\\\"> <path d=\\\"M437,75A256,256,0,1,0,75,437,256,256,0,1,0,437,75ZM416.43,416.43a226.82,226.82,0,0,1-320.86,0C7.11,328,7.11,184,95.57,95.57a226.82,226.82,0,0,1,320.86,0C504.89,184,504.89,328,416.43,416.43Z\\\"/><path d=\\\"M368.81,143.19a14.5,14.5,0,0,0-20.58,0L256,235.42l-92.23-92.23a14.55,14.55,0,0,0-20.58,20.58L235.42,256l-92.23,92.23a14.6,14.6,0,0,0,10.24,24.89,14.19,14.19,0,0,0,10.24-4.31l92.23-92.23,92.23,92.23a14.64,14.64,0,0,0,10.24,4.31,14,14,0,0,0,10.24-4.31,14.5,14.5,0,0,0,0-20.58l-92-92.23,92.23-92.23A14.5,14.5,0,0,0,368.81,143.19Z\\\"/> </g> <g *ngIf=\\\"types.async\\\" class=\\\"snotify-icon__async\\\"> <path d=\\\"M256,0a32,32,0,0,0-32,32V96a32,32,0,0,0,64,0V32A32,32,0,0,0,256,0Zm0,384a32,32,0,0,0-32,32v64a32,32,0,0,0,64,0V416A32,32,0,0,0,256,384ZM391.74,165.5,437,120.22A32,32,0,0,0,391.74,75L346.5,120.22a32,32,0,0,0,45.25,45.28Zm-271.52,181L75,391.74A32,32,0,0,0,120.22,437l45.25-45.25a32,32,0,0,0-45.25-45.25Zm0-271.52A32,32,0,1,0,75,120.22l45.25,45.28a32,32,0,1,0,45.25-45.28ZM391.74,346.5a32,32,0,0,0-45.25,45.25L391.74,437A32,32,0,0,0,437,391.74ZM480,224H416a32,32,0,0,0,0,64h64a32,32,0,0,0,0-64ZM128,256a32,32,0,0,0-32-32H32a32,32,0,0,0,0,64H96A32,32,0,0,0,128,256Z\\\"/> </g> </svg> \",\r\n                styles: [\".snotify-icon__error { fill: #ffcdd2; } .snotify-icon__warning { fill: #ffccbc; } .snotify-icon__info { fill: #bbdefb; } .snotify-icon__success { fill: #c8e6c9; } .snotify-icon__async { fill: #bbdefb; animation: async 3s infinite linear; transform-origin: 50% 50%; } @keyframes async { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } \"]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nIconComponent.ctorParameters = function () { return []; };\r\nIconComponent.propDecorators = {\r\n    'types': [{ type: Input },],\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/toast/icon/icon.component.js\n// module id = ./dist/snotify/toast/icon/icon.component.js\n// module chunks = 1","/**\r\n * Toast main model\r\n */\r\nvar SnotifyToast = (function () {\r\n    function SnotifyToast(id, title, body, config) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.body = body;\r\n        this.config = config;\r\n    }\r\n    return SnotifyToast;\r\n}());\r\nexport { SnotifyToast };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/toast/snotify-toast.model.js\n// module id = ./dist/snotify/toast/snotify-toast.model.js\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { SnotifyService } from '../snotify.service';\r\nimport { SnotifyAction } from '../enum/SnotifyAction.enum';\r\nimport { SnotifyType } from '../enum/SnotifyType.enum';\r\nvar ToastComponent = (function () {\r\n    function ToastComponent(service) {\r\n        this.service = service;\r\n        /**\r\n         * Toast state\r\n         * @type {Object}\r\n         */\r\n        this.state = {\r\n            toast: {\r\n                progress: 0,\r\n                isShowing: false,\r\n                isRemoving: false,\r\n                isDestroying: false\r\n            },\r\n            prompt: {\r\n                input: '',\r\n                isPromptFocused: false,\r\n                isPromptActive: false\r\n            }\r\n        };\r\n        /**\r\n         * Active style for toast\r\n         * @type {Object}\r\n         */\r\n        this.types = {\r\n            success: false,\r\n            warning: false,\r\n            error: false,\r\n            info: false,\r\n            simple: false,\r\n            async: false,\r\n            confirm: false,\r\n            prompt: false,\r\n        };\r\n    }\r\n    /*\r\n    Life cycles\r\n     */\r\n    /**\r\n     * Init base options. Subscribe to toast changed, toast deleted\r\n     */\r\n    ToastComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.transitionTime = this.service.options.transition;\r\n        this.maxHeight = this.service.options.maxHeight;\r\n        this.initToast();\r\n        this.toastChangedSubscription = this.service.toastChanged.subscribe(function (toast) {\r\n            if (_this.toast.id === toast.id) {\r\n                _this.initToast(toast);\r\n            }\r\n        });\r\n        this.toastDeletedSubscription = this.service.toastDeleted.subscribe(function (id) {\r\n            if (_this.toast.id === id) {\r\n                _this.onRemove().then(function () {\r\n                    _this.service.remove(id, true);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Delay on toast show\r\n     */\r\n    ToastComponent.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        setTimeout(function () { return _this.onShow(); }, 50);\r\n    };\r\n    /**\r\n     * Unsubscribe subscriptions\r\n     */\r\n    ToastComponent.prototype.ngOnDestroy = function () {\r\n        this.lifecycle(SnotifyAction.afterDestroy);\r\n        this.toastChangedSubscription.unsubscribe();\r\n        this.toastDeletedSubscription.unsubscribe();\r\n    };\r\n    /*\r\n    Event hooks\r\n     */\r\n    /**\r\n     * Trigger OnClick lifecycle\r\n     */\r\n    ToastComponent.prototype.onClick = function () {\r\n        this.lifecycle(SnotifyAction.onClick);\r\n        if (this.toast.config.closeOnClick) {\r\n            this.service.remove(this.toast.id);\r\n        }\r\n    };\r\n    /**\r\n     * Trigger beforeDestroy lifecycle. Removes toast\r\n     */\r\n    ToastComponent.prototype.onRemove = function () {\r\n        var _this = this;\r\n        this.maxHeight = 0;\r\n        clearInterval(this.interval);\r\n        this.state.toast.isDestroying = true;\r\n        this.lifecycle(SnotifyAction.beforeDestroy);\r\n        this.state.toast.isRemoving = true;\r\n        return new Promise(function (resolve, reject) { return setTimeout(resolve, _this.service.options.transition); });\r\n    };\r\n    /**\r\n     * Trigger onInit lifecycle\r\n     */\r\n    ToastComponent.prototype.onShow = function () {\r\n        this.state.toast.isShowing = true;\r\n        this.lifecycle(SnotifyAction.onInit);\r\n    };\r\n    /**\r\n     * Trigger onHoverEnter lifecycle\r\n     */\r\n    ToastComponent.prototype.onMouseEnter = function () {\r\n        this.lifecycle(SnotifyAction.onHoverEnter);\r\n        if (this.toast.config.pauseOnHover) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n    /**\r\n     * Trigger onHoverLeave lifecycle\r\n     */\r\n    ToastComponent.prototype.onMouseLeave = function () {\r\n        if (this.toast.config.pauseOnHover && !this.types.prompt) {\r\n            this.startTimeout(this.state.toast.progress);\r\n        }\r\n        this.lifecycle(SnotifyAction.onHoverLeave);\r\n    };\r\n    // Prompt\r\n    /**\r\n     * Expand input\r\n     */\r\n    ToastComponent.prototype.onPromptEnter = function () {\r\n        this.state.prompt.isPromptActive = true;\r\n    };\r\n    /**\r\n     * Collapse input\r\n     */\r\n    ToastComponent.prototype.onPromptLeave = function () {\r\n        if (!this.state.prompt.input.length && !this.state.prompt.isPromptFocused) {\r\n            this.state.prompt.isPromptActive = false;\r\n        }\r\n    };\r\n    /*\r\n     Common\r\n     */\r\n    /**\r\n     * Initialize base toast config\r\n     * @param toast {SnotifyToast}\r\n     */\r\n    ToastComponent.prototype.initToast = function (toast) {\r\n        if (toast) {\r\n            if (this.toast.config.type !== toast.config.type) {\r\n                clearInterval(this.interval);\r\n            }\r\n            this.toast = toast;\r\n        }\r\n        this.setType(this.toast.config.type);\r\n        if (this.toast.config.timeout > 0) {\r\n            this.startTimeout(0);\r\n        }\r\n        else {\r\n            this.toast.config.showProgressBar = false;\r\n            this.toast.config.pauseOnHover = false;\r\n        }\r\n    };\r\n    /**\r\n     * Setup toast type\r\n     * @param type {SnotifyType}\r\n     */\r\n    ToastComponent.prototype.setType = function (type) {\r\n        this.resetTypes();\r\n        switch (type) {\r\n            case SnotifyType.SUCCESS:\r\n                this.types.success = true;\r\n                break;\r\n            case SnotifyType.ERROR:\r\n                this.types.error = true;\r\n                break;\r\n            case SnotifyType.WARNING:\r\n                this.types.warning = true;\r\n                break;\r\n            case SnotifyType.INFO:\r\n                this.types.info = true;\r\n                break;\r\n            case SnotifyType.ASYNC:\r\n                this.types.async = true;\r\n                break;\r\n            case SnotifyType.CONFIRM:\r\n                this.types.confirm = true;\r\n                break;\r\n            case SnotifyType.PROMPT:\r\n                this.types.prompt = true;\r\n                break;\r\n            default:\r\n                this.types.simple = true;\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Reset toast type\r\n     */\r\n    ToastComponent.prototype.resetTypes = function () {\r\n        this.types.info =\r\n            this.types.error =\r\n                this.types.warning =\r\n                    this.types.simple =\r\n                        this.types.success =\r\n                            this.types.async =\r\n                                this.types.confirm =\r\n                                    this.types.prompt =\r\n                                        false;\r\n    };\r\n    /**\r\n     * Start progress bar\r\n     * @param currentProgress {Number}\r\n     */\r\n    ToastComponent.prototype.startTimeout = function (currentProgress) {\r\n        var _this = this;\r\n        var refreshRate = 10;\r\n        if (this.state.toast.isDestroying) {\r\n            return;\r\n        }\r\n        this.state.toast.progress = currentProgress;\r\n        var step = refreshRate / this.toast.config.timeout * 100;\r\n        this.interval = setInterval(function () {\r\n            _this.state.toast.progress += step;\r\n            if (_this.state.toast.progress >= 100) {\r\n                _this.service.remove(_this.toast.id);\r\n            }\r\n        }, refreshRate);\r\n    };\r\n    /**\r\n     * Lifesycle trigger\r\n     * @param action {SnotifyAction}\r\n     */\r\n    ToastComponent.prototype.lifecycle = function (action) {\r\n        return this.service.lifecycle.next({\r\n            action: action,\r\n            toast: this.toast\r\n        });\r\n    };\r\n    return ToastComponent;\r\n}());\r\nexport { ToastComponent };\r\nToastComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'app-snotify-toast',\r\n                template: \"<div class=\\\"snotifyToast\\\" [ngClass]=\\\"{ 'snotify-success': types.success, 'snotify-warning': types.warning, 'snotify-info': types.info, 'snotify-error': types.error, 'snotify-simple': types.simple, 'snotify-async': types.async, 'snotify-confirm': types.confirm, 'snotify-prompt': types.prompt, 'snotifyToast-show': state.toast.isShowing, 'snotifyToast-remove': state.toast.isRemoving }\\\" [ngStyle]=\\\"{ 'transition': 'transform ' + transitionTime + 'ms, opacity '+transitionTime/2+'ms, max-height ease '+transitionTime+'ms', 'max-height': maxHeight + 'px' }\\\" (click)=\\\"onClick()\\\" (mouseenter)=\\\"onMouseEnter()\\\" (mouseleave)=\\\"onMouseLeave()\\\"> <div class=\\\"snotifyToast__inner\\\"> <div class=\\\"snotifyToast__progressBar\\\" *ngIf=\\\"toast.config.showProgressBar\\\"> <span class=\\\"snotifyToast__progressBar__percentage\\\" [ngStyle]=\\\"{'width': state.toast.progress + '%'}\\\"></span> </div> <div class=\\\"snotifyToast__title\\\">{{toast.title | truncate : toast.config.titleMaxLength}}</div> <div class=\\\"snotifyToast__body\\\">{{toast.body | truncate : toast.config.bodyMaxLength}}</div> <span *ngIf=\\\"types.prompt\\\" class=\\\"input\\\" [ngClass]=\\\"{'input--filled': state.prompt.isPromptActive}\\\" (mouseenter)=\\\"onPromptEnter()\\\" (mouseleave)=\\\"onPromptLeave()\\\"> <input (input)=\\\"state.prompt.input = $event.target.value\\\" class=\\\"input__field\\\" type=\\\"text\\\" [id]=\\\"toast.id\\\" (focus)=\\\"state.prompt.isPromptFocused = true\\\" (blur)=\\\"state.prompt.isPromptFocused = false; onPromptLeave()\\\"/> <label class=\\\"input__label\\\" [for]=\\\"toast.id\\\"> <span class=\\\"input__labelContent\\\">{{toast.config.placeholder | truncate}}</span> </label> </span> <app-icon *ngIf=\\\"!toast.config.icon; else elseBlock\\\" class=\\\"snotify-icon\\\" [types]=\\\"types\\\"></app-icon> <ng-template #elseBlock> <img class=\\\"snotify-icon\\\" [src]='toast.config.icon' /> </ng-template> </div> <div *ngIf=\\\"types.prompt || types.confirm\\\" class=\\\"snotifyToast__buttons\\\"> <button (click)=\\\"toast.config.buttons[0].action(types.prompt ? state.prompt.input : null)\\\" [ngClass]=\\\"{'snotifyToast__buttons--bold': toast.config.buttons[0].bold}\\\"> {{toast.config.buttons[0].text}} </button> <button (click)=\\\"toast.config.buttons[1].action(types.prompt ? state.prompt.input : null)\\\" [ngClass]=\\\"{'snotifyToast__buttons--bold': toast.config.buttons[1].bold}\\\"> {{toast.config.buttons[1].text}} </button> </div> </div> \",\r\n                styles: [\":host { display: block; cursor: pointer; } .snotifyToast { background-color: #fff; max-height: 300px; height: 100%; margin: 5px; opacity: 0; transform: translate(0, -50%); border-radius: 5px; overflow: hidden; } .snotifyToast__inner { position: relative; padding: 10px 65px 10px 15px; font-size: 16px; color: #000; } .snotifyToast__progressBar { position: absolute; top: 0; left: 0; right: 0; height: 10px; background-color: #c7c7c7; } .snotifyToast__progressBar__percentage { position: absolute; top: 0; left: 0; height: 10px; background-color: #4c4c4c; max-width: 100%; } .snotifyToast__progressBar + .snotifyToast__title { margin-top: 5px; } .snotifyToast__progressBar ~ .snotifyToast-icon { margin-top: 5px; } .snotifyToast__title { font-size: 1.8em; margin-bottom: 5px; color: #fff; } .snotifyToast__body { font-size: 1em; } .snotifyToast__buttons { display: flex; flex-flow: row nowrap; justify-content: space-between; border-top: 1px solid rgba(0, 0, 0, 0.1); } .snotifyToast__buttons button { position: relative; width: 100%; border: none; background: transparent; padding: 8px; text-transform: capitalize; color: #fff; } .snotifyToast__buttons button:hover, .snotifyToast__buttons button:focus { background: rgba(0, 0, 0, 0.1); outline: none; } .snotifyToast__buttons button:active { background: rgba(0, 0, 0, 0.5); } .snotifyToast__buttons button:last-child::before { content: ''; width: 2px; position: absolute; top: 0; bottom: 0; left: -1px; background-color: rgba(0, 0, 0, 0.1); } .snotifyToast__buttons--bold { font-weight: 700; } .snotifyToast-show { transform: translate(0, 0); opacity: 1; } .snotifyToast-remove { max-height: 0; overflow: hidden; transform: translate(0, 50%); opacity: 0; } .input { position: relative; z-index: 1; display: inline-block; margin: 0; width: 100%; vertical-align: top; transition: all .5s; transition-delay: .3s; transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1); } .input__field { position: relative; display: block; float: right; padding: 0.85em 0.5em; width: 100%; border: none; border-radius: 0; background: transparent; color: #333; font-weight: bold; -webkit-appearance: none; /* for box shadows to show on iOS */ opacity: 0; transition: opacity 0.3s; } .input__field:focus { outline: none; } .input__label { display: inline-block; float: right; padding: 0 0.85em; width: 100%; color: #e0f2f1; font-weight: bold; font-size: 70.25%; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; left: 0; height: 100%; text-align: left; pointer-events: none; } .input__label::before, .input__label::after { content: ''; position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: transform 0.3s; } .input__label::before { border-top: 2px solid #fff; transform: translate3d(0, 100%, 0) translate3d(0, -2px, 0); transition-delay: 0.3s; } .input__label::after { z-index: -1; background: #b2dfdb; transform: scale3d(1, 0, 1); transform-origin: 50% 0; } .input__labelContent { position: relative; display: block; padding: 1.6em 0; width: 100%; transition: transform 0.3s 0.3s; } .input--filled { margin-top: 1.5em; } .input--filled:focus, .input--filled .input__field { opacity: 1; transition-delay: 0.3s; } .input__field:focus + .input__label .input__labelContent, .input--filled .input__labelContent { transform: translate(0, -80%); transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1); } .input__field:focus + .input__label::before, .input--filled .input__label::before { transition-delay: 0s; } .input__field:focus + .input__label::before, .input--filled .input__label::before { transform: translate(0, 0); } .input__field:focus + .input__label::after, .input--filled .input__label::after { transform: scale(1, 1); transition-delay: 0.3s; transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1); } /*************** ** Modifiers ** **************/ .snotify-simple .snotifyToast__title, .snotify-simple .snotifyToast__body { color: #000; } .snotify-success { background-color: #4CAF50; } .snotify-success .snotifyToast__progressBar { background-color: #388E3C; } .snotify-success .snotifyToast__progressBar__percentage { background-color: #81c784; } .snotify-success .snotifyToast__body { color: #C8E6C9; } .snotify-info { background-color: #1e88e5; } .snotify-info .snotifyToast__progressBar { background-color: #1565c0; } .snotify-info .snotifyToast__progressBar__percentage { background-color: #64b5f6; } .snotify-info .snotifyToast__body { color: #e3f2fd; } .snotify-warning { background-color: #ff9800; } .snotify-warning .snotifyToast__progressBar { background-color: #ef6c00; } .snotify-warning .snotifyToast__progressBar__percentage { background-color: #ffcc80; } .snotify-warning .snotifyToast__body { color: #fff3e0; } .snotify-error { background-color: #f44336; } .snotify-error .snotifyToast__progressBar { background-color: #c62828; } .snotify-error .snotifyToast__progressBar__percentage { background-color: #ef9a9a; } .snotify-error .snotifyToast__body { color: #ffebee; } .snotify-async { background-color: #1e88e5; } .snotify-async .snotifyToast__progressBar { background-color: #1565c0; } .snotify-async .snotifyToast__progressBar__percentage { background-color: #64b5f6; } .snotify-async .snotifyToast__body { color: #e3f2fd; } .snotify-confirm { background-color: #009688; } .snotify-confirm .snotifyToast__progressBar { background-color: #4db6ac; } .snotify-confirm .snotifyToast__progressBar__percentage { background-color: #80cbc4; } .snotify-confirm .snotifyToast__body { color: #e0f2f1; } .snotify-prompt { background-color: #009688; } .snotify-prompt .snotifyToast__inner { padding: 10px 15px; } .snotify-prompt .snotifyToast__title { margin-bottom: 0; } .snotify-prompt .snotifyToast__body { color: #e0f2f1; } .snotify-icon { position: absolute; right: 10px; top: 50%; line-height: 0; transform: translate(0, -50%); max-height: 48px; max-width: 48px; } \"]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nToastComponent.ctorParameters = function () { return [\r\n    { type: SnotifyService, },\r\n]; };\r\nToastComponent.propDecorators = {\r\n    'toast': [{ type: Input },],\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/snotify/toast/toast.component.js\n// module id = ./dist/snotify/toast/toast.component.js\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./example async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example async\n// module id = ./example async recursive\n// module chunks = 1","module.exports = \"<aside>\\r\\n  <h3 class=\\\"text-center\\\">Toast config</h3>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"title\\\">Title</label>\\r\\n    <input [(ngModel)]=\\\"title\\\" type=\\\"text\\\" id=\\\"title\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"body\\\">Body</label>\\r\\n    <textarea [(ngModel)]=\\\"body\\\" id=\\\"body\\\" rows=\\\"3\\\" class=\\\"form-control\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"titlemaxlen\\\">Title max-length</label>\\r\\n        <input [(ngModel)]=\\\"titleMaxLength\\\" type=\\\"text\\\" id=\\\"titlemaxlen\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"bodymaxlen\\\">Body max-length</label>\\r\\n        <input [(ngModel)]=\\\"bodyMaxLength\\\" type=\\\"text\\\" id=\\\"bodymaxlen\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"timeout\\\">Timeout</label>\\r\\n    <input [(ngModel)]=\\\"timeout\\\" type=\\\"number\\\" id=\\\"timeout\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"maxheight\\\">Toast max-height</label>\\r\\n    <input [(ngModel)]=\\\"maxHeight\\\" type=\\\"number\\\" id=\\\"maxheight\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"position\\\">Position</label>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <select [(ngModel)]=\\\"position\\\" id=\\\"position\\\" class=\\\"form-control\\\">\\r\\n          <option [ngValue]=\\\"0\\\">LEFT - TOP</option>\\r\\n          <option [ngValue]=\\\"1\\\">LEFT - CENTER</option>\\r\\n          <option [ngValue]=\\\"2\\\">LEFT - BOTTOM</option>\\r\\n          <option [ngValue]=\\\"3\\\">RIGHT - TOP</option>\\r\\n          <option [ngValue]=\\\"4\\\">RIGHT - CENTER</option>\\r\\n          <option [ngValue]=\\\"5\\\">RIGHT - BOTTOM</option>\\r\\n          <option [ngValue]=\\\"6\\\">CENTER - TOP</option>\\r\\n          <option [ngValue]=\\\"7\\\">CENTER - CENTER</option>\\r\\n          <option [ngValue]=\\\"8\\\">CENTER - BOTTOM</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"switch-group-wrapper\\\">\\r\\n    <div class=\\\"switch-wrapper\\\">\\r\\n      <strong>Show progress bar?</strong>\\r\\n      <div class=\\\"switch\\\">\\r\\n        <input [(ngModel)]=\\\"progressBar\\\" id=\\\"progressBar\\\" class=\\\"cmn-toggle cmn-toggle-yes-no\\\" type=\\\"checkbox\\\">\\r\\n        <label for=\\\"progressBar\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"switch-wrapper\\\">\\r\\n      <strong>Close on click?</strong>\\r\\n      <div class=\\\"switch\\\">\\r\\n        <input [(ngModel)]=\\\"closeClick\\\" id=\\\"closeClick\\\" class=\\\"cmn-toggle cmn-toggle-yes-no\\\" type=\\\"checkbox\\\">\\r\\n        <label for=\\\"closeClick\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"switch-wrapper\\\">\\r\\n      <strong>Pause on hover?</strong>\\r\\n      <div class=\\\"switch\\\">\\r\\n        <input [(ngModel)]=\\\"pauseHover\\\" id=\\\"pauseHover\\\" class=\\\"cmn-toggle cmn-toggle-yes-no\\\" type=\\\"checkbox\\\">\\r\\n        <label for=\\\"pauseHover\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"switch-wrapper\\\">\\r\\n      <strong>New items on top?</strong>\\r\\n      <div class=\\\"switch\\\">\\r\\n        <input [(ngModel)]=\\\"newTop\\\" id=\\\"newTop\\\" class=\\\"cmn-toggle cmn-toggle-yes-no\\\" type=\\\"checkbox\\\">\\r\\n        <label for=\\\"newTop\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"backdrop\\\">\\r\\n      Backdrop (0-1)\\r\\n    </label>\\r\\n    <input [(ngModel)]=\\\"backdrop\\\" type=\\\"number\\\" id=\\\"backdrop\\\" class=\\\"form-control\\\" min=\\\"-1\\\" max=\\\"1\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"dockMax\\\">\\r\\n      Max items on screen\\r\\n    </label>\\r\\n    <input [(ngModel)]=\\\"dockMax\\\" type=\\\"number\\\" id=\\\"dockMax\\\" class=\\\"form-control\\\" min=\\\"1\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"buttons\\\">\\r\\n      <div class=\\\"btn-group btn-group-justified\\\">\\r\\n        <div class=\\\"btn btn-success\\\" (click)=\\\"onSuccess()\\\">Success</div>\\r\\n        <div class=\\\"btn btn-info\\\" (click)=\\\"onInfo()\\\">Info</div>\\r\\n        <div class=\\\"btn btn-danger\\\" (click)=\\\"onError()\\\">Error</div>\\r\\n        <div class=\\\"btn btn-warning\\\" (click)=\\\"onWarning()\\\">Warning</div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"btn-group btn-group-justified\\\">\\r\\n        <div class=\\\"btn btn-default\\\" (click)=\\\"onSimple()\\\">Simple</div>\\r\\n        <div class=\\\"btn btn-blue\\\" (click)=\\\"onAsyncLoading()\\\">Async</div>\\r\\n        <div class=\\\"btn btn-teal\\\" (click)=\\\"onConfirmation()\\\">Confirm</div>\\r\\n        <div class=\\\"btn btn-black\\\" (click)=\\\"onPrompt()\\\">Prompt</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"btn btn-block btn-primary\\\" (click)=\\\"onClear()\\\">Clear all</div>\\r\\n\\r\\n\\r\\n</aside>\\r\\n<main>\\r\\n  <div class=\\\"brand\\\">\\r\\n    <h1>Ng-Snotify</h1>\\r\\n    <p>Angular 2 Notification Center</p>\\r\\n  </div>\\r\\n</main>\\r\\n<footer>\\r\\n  <div class=\\\"footer\\\">\\r\\n    <a href=\\\"documentation/index.html\\\" target=\\\"_blank\\\">Auto-Documentation</a> &#9673;\\r\\n    <a href=\\\"https://github.com/artemsky/ng-snotify\\\" target=\\\"_blank\\\">GitHub</a> &#9673;\\r\\n    <a href=\\\"https://www.npmjs.com/package/ng-snotify\\\" target=\\\"_blank\\\">NPM</a>\\r\\n    <h6>MIT &copy; 2017 <a href=\\\"https://github.com/artemsky/\\\">artemsky</a></h6>\\r\\n  </div>\\r\\n</footer>\\r\\n<app-snotify></app-snotify>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/app.component.html\n// module id = ./example/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Audiowide);\", \"\"]);\n\n// module\nexports.push([module.id, \"main {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: #EA5C54;\\n  /* Old browsers */\\n  /* FF3.6+ */\\n  /* Chrome,Safari4+ */\\n  /* Chrome10+,Safari5.1+ */\\n  /* Opera 11.10+ */\\n  /* IE10+ */\\n  background: linear-gradient(135deg, #EA5C54 0%, #bb6dec 100%);\\n  /* W3C */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#EA5C54 ', endColorstr='#bb6dec',GradientType=1 );\\n  /* IE6-9 fallback on horizontal gradient */\\n  z-index: 1; }\\n\\naside {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 340px;\\n  height: 100%;\\n  padding: 15px;\\n  background: #fff;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  z-index: 3; }\\n  aside .btn-group .btn {\\n    padding: 6px 9px; }\\n\\n.brand {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateY(-50%) translateX(calc(-50% + 340px / 2));\\n          transform: translateY(-50%) translateX(calc(-50% + 340px / 2));\\n  color: #ffffff; }\\n  .brand h1 {\\n    font-family: 'Audiowide', cursive;\\n    font-size: 6em; }\\n  .brand p {\\n    font-size: 2em;\\n    text-align: center; }\\n\\ntextarea {\\n  resize: vertical; }\\n\\nfooter {\\n  display: block;\\n  padding: 10px;\\n  position: fixed;\\n  bottom: 15px;\\n  left: 50%;\\n  font-size: 15px;\\n  text-align: center;\\n  color: white;\\n  width: calc(100% - 340px);\\n  -webkit-transform: translateX(calc(-50% + 340px / 2));\\n          transform: translateX(calc(-50% + 340px / 2));\\n  z-index: 2; }\\n  footer a {\\n    color: #ffffff; }\\n\\n.buttons {\\n  margin: 20px 0; }\\n\\n.btn-group {\\n  margin: 5px 0 0; }\\n\\n.btn-black {\\n  color: #f8f8f8;\\n  background-color: #2d2d2d;\\n  border-color: #000000; }\\n  .btn-black:hover {\\n    color: #fff;\\n    background-color: #000000;\\n    border-color: #000000; }\\n\\n.btn-blue {\\n  color: #f8f8f8;\\n  background-color: #2095F2;\\n  border-color: #1a80d1; }\\n  .btn-blue:hover {\\n    color: #fff;\\n    background-color: #1a80d1;\\n    border-color: #1a80d1; }\\n\\n.btn-teal {\\n  color: #f8f8f8;\\n  background-color: #009587;\\n  border-color: #018175; }\\n  .btn-teal:hover {\\n    color: #fff;\\n    background-color: #018175;\\n    border-color: #018175; }\\n\\n.switch-wrapper {\\n  width: 50%; }\\n\\n.switch-group-wrapper {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-flow: row wrap;\\n          flex-flow: row wrap;\\n  margin: 5px 0 10px; }\\n\\n.cmn-toggle {\\n  position: absolute;\\n  margin-left: -9999px;\\n  padding: 2px;\\n  width: 60px;\\n  height: 30px;\\n  visibility: hidden; }\\n  .cmn-toggle + label {\\n    display: block;\\n    position: relative;\\n    padding: 2px;\\n    width: 60px;\\n    height: 30px;\\n    cursor: pointer;\\n    outline: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none; }\\n    .cmn-toggle + label::before, .cmn-toggle + label::after {\\n      display: block;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      bottom: 0;\\n      right: 0;\\n      color: #fff;\\n      font-family: \\\"Roboto Slab\\\", serif;\\n      font-size: 20px;\\n      text-align: center;\\n      line-height: 30px; }\\n    .cmn-toggle + label::before {\\n      background-color: #dddddd;\\n      content: attr(data-off);\\n      transition: -webkit-transform 0.5s;\\n      transition: transform 0.5s;\\n      transition: transform 0.5s, -webkit-transform 0.5s;\\n      -webkit-backface-visibility: hidden;\\n              backface-visibility: hidden; }\\n    .cmn-toggle + label::after {\\n      background-color: #8ce196;\\n      content: attr(data-on);\\n      transition: -webkit-transform 0.5s;\\n      transition: transform 0.5s;\\n      transition: transform 0.5s, -webkit-transform 0.5s;\\n      -webkit-transform: rotateY(180deg);\\n              transform: rotateY(180deg);\\n      -webkit-backface-visibility: hidden;\\n              backface-visibility: hidden; }\\n  .cmn-toggle:checked + label::before {\\n    -webkit-transform: rotateY(180deg);\\n            transform: rotateY(180deg); }\\n  .cmn-toggle:checked + label::after {\\n    -webkit-transform: rotateY(0);\\n            transform: rotateY(0); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/app.component.scss\n// module id = ./example/app/app.component.scss\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {SnotifyModule, SnotifyService, SnotifyToast, SnotifyPosition} from 'ng-snotify';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Snotify title!';\r\n  body = 'Lorem ipsum dolor sit amet!';\r\n  timeout = 3000;\r\n  position = SnotifyPosition.right_bottom;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 6;\r\n  pauseHover = true;\r\n  maxHeight = 300;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n\r\n  constructor(private snotifyService: SnotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.snotifyService.setConfig({\r\n      timeout: 3000,\r\n      titleMaxLength: 14,\r\n      bodyMaxLength: 40\r\n    }, {\r\n      newOnTop: false,\r\n      position: this.position,\r\n      maxHeight: 500\r\n    });\r\n\r\n    this.snotifyService.onInit = (toast: SnotifyToast) => {\r\n      console.log('on Init', toast);\r\n      /*\r\n       At each callback you can change toast data directly.\r\n       toast.title = \"New Title\"\r\n       toast.body = \"Some new value\"\r\n       */\r\n    };\r\n\r\n    this.snotifyService.onHoverEnter = (toast: SnotifyToast) => {\r\n      console.log('Hover enter', toast);\r\n    };\r\n\r\n    this.snotifyService.onHoverLeave = (toast: SnotifyToast) => {\r\n      console.log('Hover leave', toast);\r\n    };\r\n\r\n    this.snotifyService.onClick = (toast: SnotifyToast) => {\r\n      console.log('Clicked', toast);\r\n    };\r\n\r\n    this.snotifyService.beforeDestroy = (toast: SnotifyToast) => {\r\n      console.log('Before Destroy', toast);\r\n    };\r\n\r\n    this.snotifyService.afterDestroy = (toast: SnotifyToast) => {\r\n      console.log('After Destroy', toast);\r\n    };\r\n  }\r\n\r\n  /*\r\n  Change global configuration\r\n   */\r\n  setGlobal() {\r\n    this.snotifyService.setConfig({\r\n      bodyMaxLength: this.bodyMaxLength,\r\n      titleMaxLength: this.titleMaxLength,\r\n      backdrop: this.backdrop\r\n    }, {\r\n      newOnTop: this.newTop,\r\n      position: this.position,\r\n      maxOnScreen: this.dockMax,\r\n      maxHeight: this.maxHeight\r\n    });\r\n  }\r\n\r\n  onSuccess() {\r\n    this.setGlobal();\r\n    this.snotifyService.success(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover\r\n    });\r\n  }\r\n  onInfo() {\r\n    this.setGlobal();\r\n    this.snotifyService.info(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover\r\n    });\r\n  }\r\n  onError() {\r\n    this.setGlobal();\r\n    this.snotifyService.error(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover\r\n    });\r\n  }\r\n  onWarning() {\r\n    this.setGlobal();\r\n    this.snotifyService.warning(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover\r\n    });\r\n  }\r\n  onSimple() {\r\n    this.setGlobal();\r\n\r\n    // const icon = `assets/custom-svg.svg`;\r\n    const icon = `https://placehold.it/48x100`;\r\n\r\n    this.snotifyService.simple(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover,\r\n      icon: icon\r\n    });\r\n  }\r\n\r\n  onAsyncLoading() {\r\n    this.setGlobal();\r\n    this.snotifyService.async(this.title, this.body,\r\n      /*\r\n      You should pass Promise or Observable of type SnotifyConfig to change some data or do some other actions\r\n      More information how to work with observables:\r\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\r\n       */\r\n\r\n      // new Promise((resolve, reject) => {\r\n      //   setTimeout(() => reject(), 1000);\r\n      //   setTimeout(() => resolve(), 1500);\r\n      // })\r\n      Observable.create(observer => {\r\n          setTimeout(() => {\r\n            observer.next({\r\n              body: 'Still loading.....',\r\n            });\r\n            }, 1000);\r\n\r\n        setTimeout(() => {\r\n          observer.next({\r\n            title: 'Success',\r\n            body: 'Example. Data loaded!',\r\n            config: {\r\n              closeOnClick: true,\r\n              timeout: 5000,\r\n              showProgressBar: true\r\n            }\r\n          });\r\n          observer.complete();\r\n        }, 5000);\r\n\r\n          // setTimeout(() => {\r\n          //   observer.error({\r\n          //     title: 'Error',\r\n          //     body: 'Example. Error 404. Service not found',\r\n          //   });\r\n          // }, 6000);\r\n\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  onConfirmation() {\r\n    this.setGlobal();\r\n    /*\r\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\r\n     */\r\n    const id = this.snotifyService.confirm(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover,\r\n      buttons: [\r\n        {text: 'Yes', action: () => console.log('Clicked: Yes'), bold: false},\r\n        {text: 'No', action: () => {console.log('Clicked: No'); this.snotifyService.remove(id); }, bold: true},\r\n      ]\r\n    });\r\n  }\r\n\r\n  onPrompt() {\r\n    this.setGlobal();\r\n    /*\r\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\r\n     At the action of the first button we can get what user entered into input field.\r\n     At the second we can't get it. But we can remove this toast\r\n     */\r\n    const id = this.snotifyService.prompt(this.title, this.body, {\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover,\r\n      buttons: [\r\n        {text: 'Yes', action: (text) => console.log('Said Yes: ' + text)},\r\n        {text: 'No', action: (text) => { console.log('Said No: ' + text); this.snotifyService.remove(id); }},\r\n      ],\r\n      placeholder: 'This is the example placeholder which you can pass' // Max-length = 40\r\n    });\r\n  }\r\n\r\n\r\n  onClear() {\r\n    this.snotifyService.clear();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {SnotifyModule, SnotifyService} from 'ng-snotify';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    SnotifyModule\r\n  ],\r\n  providers: [SnotifyService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./example/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./example/main.ts"],"sourceRoot":""}